import { Exception } from '@poppinss/utils';
import { HttpContextContract } from '@ioc:Adonis/Core/HttpContext';
/**
 * Exception raised when unable to verify user credentials
 */
export declare class InvalidCredentialsException extends Exception {
    guard: string;
    responseText: string;
    /**
     * Unable to find user
     */
    static invalidUid(guard: string): InvalidCredentialsException;
    /**
     * Invalid user password
     */
    static invalidPassword(guard: string): InvalidCredentialsException;
    /**
     * Send response as an array of errors
     */
    protected respondWithJson(ctx: HttpContextContract): void;
    /**
     * Flash error message and redirect the user back
     */
    protected respondWithRedirect(ctx: HttpContextContract): void;
    /**
     * Send response as an array of errors formatted as per JSONAPI spec
     */
    protected respondWithJsonAPI(ctx: HttpContextContract): void;
    /**
     * Self handle exception and attempt to make the best response based
     * upon the type of request
     */
    handle(_: InvalidCredentialsException, ctx: HttpContextContract): Promise<void>;
}
